name: Publish Docker image

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

jobs:
  push_to_registry:
    name: Push Docker images to GHCR
    runs-on: self-hosted
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: gd, pdo_pgsql, sodium, curl, intl, mbstring, xml, zip, bcmath

      - name: Set Docker image tags and repository information
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/${{ github.repository }}
          VERSION=${GITHUB_SHA::8}

          # If this is a git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi

          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "docker_image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT

          # Set the package name for cleanup
          CURRENT_REPO="${{ github.repository }}"
          ORG_NAME=${CURRENT_REPO%%/*}
          REPO_NAME=${CURRENT_REPO#*/}
          echo "owner=${ORG_NAME}" >> $GITHUB_OUTPUT
          echo "package=${REPO_NAME}-dev" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        id: login-ghcr
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      # All-in-one Image Steps
      - name: Extract metadata (tags, labels) for All-in-one Docker
        id: meta_all_in_one
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/imantsk/hi.events-all-in-one

      - name: Build and push All-in-one Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile.all-in-one
          push: true
          tags: ${{ steps.meta_all_in_one.outputs.tags }}
          labels: ${{ steps.meta_all_in_one.outputs.labels }}

      # Backend Image Steps
      - name: Extract metadata (tags, labels) for Backend Docker
        id: meta_backend
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/imantsk/hi.events-backend

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta_backend.outputs.tags }}
          labels: ${{ steps.meta_backend.outputs.labels }}

      # Frontend Image Steps
      - name: Extract metadata (tags, labels) for Frontend Docker
        id: meta_frontend
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/imantsk/hi.events-frontend

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.ssr
          push: true
          tags: ${{ steps.meta_frontend.outputs.tags }}
          labels: ${{ steps.meta_frontend.outputs.labels }}

      - name: Cleanup GitHub Container Registry
        uses: davahome/ghcr-cleanup@v1.1
        with:
          owner: ${{ steps.prep.outputs.owner }}
          package: ${{ steps.prep.outputs.package }}
          token: ${{ secrets.GHCR_PAT }}
          skip_tags: ${{ steps.prep.outputs.version }}
          delete_untagged: 1
          delete_tagged: 1
          keep_versions: 0
          minimum_days: 0
